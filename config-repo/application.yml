app:
  eureka-username: u
  eureka-password: '{cipher}9f3c87dfa7fdea08158ce0a670a6d2d3af2dee57405b1c6e42b7e39c96fac52d'
  eureka-server: localhost
  auth-server: localhost

spring.rabbitmq:
  host: 127.0.0.1
  port: 5672
  username: guest
  password: '{cipher}72a4abd9633d70bb370c5b511471e5e366a8c1022328439075e66b7d768c3ff2'


spring.cloud.stream.kafka.binder:
  brokers: 127.0.0.1
  defaultBrokerPort: 9092

spring.cloud.stream.defaultBinder: rabbit

# WARNING: Exposing all management endpoints over http should only be used during development, must be locked down in production!
management.endpoint.health.show-details: "ALWAYS"
management.endpoints.web.exposure.include: "*"

management:
  tracing:
    sampling:
      probability: 1.0
    propagation:
      type: b3_multi
  zipkin:
    tracing:
      endpoint: "http://localhost:9411/api/v2/spans"

---
spring.config.activate.on-profile: docker

management:
  zipkin:
    tracing:
      endpoint: "http://zipkin:9411/api/v2/spans"

spring.rabbitmq.host: rabbitmq

spring.cloud.stream.kafka.binder.brokers: kafka

app:
  eureka-server: eureka
  auth-server: auth-server
---
spring.config.activate.on-profile: kafka

management.health.rabbit.enabled: false
spring.cloud.stream.defaultBinder: kafka
spring.kafka.bootstrap-servers: kafka:9092
spring.cloud.stream.kafka.binder.replication-factor: 1